<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Apprenant extends \App\Entity\Apprenant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'profilId', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'profilSortie', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'groupPromos', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'livrablesPartiels', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'promo', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'competencesValides', 'Login', 'password', 'mail', 'prenom', 'nom', 'profil', 'roles', 'photo'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'profilId', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'profilSortie', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'groupPromos', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'livrablesPartiels', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'promo', '' . "\0" . 'App\\Entity\\Apprenant' . "\0" . 'competencesValides', 'Login', 'password', 'mail', 'prenom', 'nom', 'profil', 'roles', 'photo'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Apprenant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getMyId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMyId', []);

        return parent::getMyId();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(string $status): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfilSortie(): ?\App\Entity\ProfilSortie
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfilSortie', []);

        return parent::getProfilSortie();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfilSortie(?\App\Entity\ProfilSortie $profilSortie): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfilSortie', [$profilSortie]);

        return parent::setProfilSortie($profilSortie);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupPromos(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupPromos', []);

        return parent::getGroupPromos();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroupPromo(\App\Entity\GroupPromo $groupPromo): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroupPromo', [$groupPromo]);

        return parent::addGroupPromo($groupPromo);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroupPromo(\App\Entity\GroupPromo $groupPromo): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroupPromo', [$groupPromo]);

        return parent::removeGroupPromo($groupPromo);
    }

    /**
     * {@inheritDoc}
     */
    public function getLivrablesPartiels(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLivrablesPartiels', []);

        return parent::getLivrablesPartiels();
    }

    /**
     * {@inheritDoc}
     */
    public function addLivrablesPartiel(\App\Entity\ApprenantLivrablePartiel $livrablesPartiel): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLivrablesPartiel', [$livrablesPartiel]);

        return parent::addLivrablesPartiel($livrablesPartiel);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLivrablesPartiel(\App\Entity\ApprenantLivrablePartiel $livrablesPartiel): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLivrablesPartiel', [$livrablesPartiel]);

        return parent::removeLivrablesPartiel($livrablesPartiel);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromo(): ?\App\Entity\Promo
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromo', []);

        return parent::getPromo();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromo(?\App\Entity\Promo $promo): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromo', [$promo]);

        return parent::setPromo($promo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompetencesValides(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompetencesValides', []);

        return parent::getCompetencesValides();
    }

    /**
     * {@inheritDoc}
     */
    public function addCompetencesValide(\App\Entity\CompetencesValides $competencesValide): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCompetencesValide', [$competencesValide]);

        return parent::addCompetencesValide($competencesValide);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCompetencesValide(\App\Entity\CompetencesValides $competencesValide): \App\Entity\Apprenant
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCompetencesValide', [$competencesValide]);

        return parent::removeCompetencesValide($competencesValide);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogin(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogin', []);

        return parent::getLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogin(string $Login): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogin', [$Login]);

        return parent::setLogin($Login);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getMail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMail', []);

        return parent::getMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMail(string $mail): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMail', [$mail]);

        return parent::setMail($mail);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom(string $prenom): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfil(): ?\App\Entity\Profil
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfil', []);

        return parent::getProfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfil(?\App\Entity\Profil $profil): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfil', [$profil]);

        return parent::setProfil($profil);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getArchive(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchive', []);

        return parent::getArchive();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchive(bool $archive): \App\Entity\Utilisateur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchive', [$archive]);

        return parent::setArchive($archive);
    }

}
